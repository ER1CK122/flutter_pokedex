import 'dart:convert';

import 'package:cached_network_image/cached_network_image.dart';
import 'package:flutter/material.dart';
import 'package:mobx/mobx.dart';
import 'package:pokedex/consts/consts_api.dart';
import 'package:pokedex/models/pokeapi.dart';
import 'package:http/http.dart' as http;
part 'pokeapi_store.g.dart';

class PokeApiStore = _PokeApiStoreBase with _$PokeApiStore;

abstract class _PokeApiStoreBase with Store {
  @observable
  Autogenerated? autogenerated;

  @observable
  Pokemon? _pokemonAtual;

  @computed
  Pokemon? get pokemonAtual => _pokemonAtual;

  @action
  fetchPokemonList() {
    // ignore: unnecessary_null_comparison
    autogenerated != null;
    loadAutogenerated().then((pokeList) {
      autogenerated = pokeList!;
    });
  }

  @action
  getPokemon({required int index}) {
    return autogenerated!.pokemon![index];
  }

  @action
  setPokemonAtual({required int index}) {
    _pokemonAtual = autogenerated!.pokemon![index];
  }

  @action
  Widget getimage({required String numero}) {
    return CachedNetworkImage(
      placeholder: (context, url) => Container(
        color: Colors.transparent,
      ),
      imageUrl:
          'https://raw.githubusercontent.com/fanzeyi/pokemon.json/master/images/$numero.png',
    );
  }

  Future<Autogenerated?> loadAutogenerated() async {
    try {
      final response = await http.get(Uri.parse(ConstsAPI.pokeapiURl));
      var decodeJson = jsonDecode(response.body);
      return Autogenerated.fromJson(decodeJson);
    } catch (error, stacktrace) {
      // ignore: avoid_print
      print("Error ao carregar lista" + stacktrace.toString());
      return null;
    }
  }
}
